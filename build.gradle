/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java-library'

    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    id 'eclipse'

}

java {
	version '0.0.1_SNAPSHOT'
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    options.encoding = 'UTF-8'
}

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()

    // Add mavenCentral.
    //mavenCentral()
}

dependencies {
    api 'org.ow2.asm:asm:7.1'

	// This dependency is exported to consumers, that is to say found on their compile classpath.
	api 'org.apache.commons:commons-math3:3.6.1'

	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
	implementation 'com.google.guava:guava:28.0-jre'

	// Use JUnit Jupiter API for testing.
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'

	// Use JUnit Jupiter Engine for testing.
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'

    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy-all:2.5.8'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
	
	// For launch Spock test from ecilpse IDE
	testImplementation 'org.junit.vintage:junit-vintage-engine:5.5.2'

}

test {
	// use junit platform for unit tests
	useJUnitPlatform()
}
